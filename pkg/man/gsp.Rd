\name{gsp}
\Rdversion{1.1}
\alias{gsp}
\alias{sc}
\alias{smsp}
\alias{Xf}
\alias{Xmat}
\alias{qs}
\alias{lsp}
\alias{Cmat}
\concept{spline}
\concept{smoothing spline}
\title{
General splines with variable degrees and smoothnes, smoothing splines
}
\description{
These functions implement a general spline with possibly different degrees in each interval and smoothness
at each knot. The function \code{sc} helps in the construction of linear hypothesis
matrices to estimate and test levels and derivatives of splines at arbitrary points and the saltus
of derivatives that have discontinuities at knots.
}
\usage{
gsp(x, knots, degree = 3, smooth = pmax(pmin(degree[-1], degree[-length(degree)]) - 1, 0), intercept = 0, signif = 3)

lsp(x, knots = quantile(x, pc), exclude = 0, pc = c(0.25, 0.75))

qs(x, knots = quantile(x, pc), exclude = 0, pc = c(0.25, 0.75))

cs(x, knots = quantile(x, pc), exclude = 0, pc = c(0.25, 0.75))

sc(sp, x, D = 0, type = 1)

smsp(x, knots)

The following functions are intended for internal use:

Xf(x, knots, degree = 3, D = 0, right = TRUE, signif = 3)

Xmat(x, degree, D = 0, signif = 3)

Cmat(knots, degree, smooth, intercept = 0, signif = 3)
}

%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{x}{
value(s) where spline is evaluated
}
  \item{knots}{
vector of knots
}
  \item{degree}{
vector giving the degree of the spline in each interval. Note the number of intervals is equal to the number of knots + 1.
}
  \item{smooth}{
vector with the degree of smoothness at each knot (0 = continuity, 1 = smooth with continuous first derivative, 2 = continuous second derivative, etc.
}
  \item{intercept}{
value of x at which the spline has value 0, i.e. the value of x for which yhat is estimated by the intercept term in the model
}
  \item{signif}{
number of significant digits used to label coefficients
}
  \item{exclude}{number of leading columns to drop from spline matrix: 0: excludes the intercept column,
    1: excludes the linear term as well.
    Terms that are excluded from the spline matrix can be modeled explicitly.
    }
  \item{sp}{
a spline function defined by \code{gsp}. See the examples below.
}
  \item{D}{the degree of a derivative: 0: value of the function, 1: first derivative, 2:
  second derivative, etc.
}
  \item{type}{how a derivative or value of a function is measured at a possible discontinuity
    at a knot: 0: limit from the left, 1: limit from the right, 2: saltus (limit from the right minus
    the limit from the left)
    }
}
\details{
 \code{gsp} generates a matrix of regressors for a spline with knots, degree of polynomials
 in each interval and the degree of smoothness at each knot. Typically, \code{gsp} is used to
 define a function that is then used in a model equation. See the examples below.
}
\section{Warning}{
The variables generated by \code{gsp} are designed so the coefficients are interpretable as changes
in derivatives at knots. The resulting matrix is not designed to have optimal numerical properties.

The intermediate matrices generated by \code{gsp} will contain \code{x} raised to the power equal to
the highest degree in \code{degree}. The values of \code{x} should be scaled to avoid
excessively large values in the spline matrix and ensuing numerical problems.
}
j\value{
\code{gsp} returns a matrix generating a spline. \code{cs}, \code{qs} and \code{lsp} return matrices
generating cubic,
quadratic and linear splines respectively.

\code{smsp}, whose code is adapted from function in the package \code{lmeSplines},
generates a smoothing spline to be used in the random effects portion of
a call to \code{lme}.
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
Monette, G. \email{georges@yorku.ca}
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
\code{\link{wald}}
}
\examples{
## Fitting a quadratic spline
simd <- data.frame( age = rep(1:50, 2), y = sin(2*pi*(1:100)/5) + rnorm(100),
          G = rep( c('male','female'), c(50,50)))
# define a function generating the spline
sp <- function(x) gsp( x, knots = c(10,25,40), degree = c(1,2,2,1),
          smooth = c(1,1,1))

fit <- lm( y ~ sp(age)*G, simd)

require(lattice)
xyplot( predict(fit) ~ age , simd, groups = G,type = 'l')
summary(fit)

## Linear hypotheses
L <- list( "Overall test of slopes at 20" = rbind(
      "Female slope at age 20" =  c( F20 <- cbind( 0 , sc( sp, 20, D = 1), 0 , 0 * sc( sp, 20, D = 1))),
      "Male slope at age 20" =  c( M20 <- cbind( 0 , sc( sp, 20, D = 1), 0 , 1 * sc( sp, 20, D = 1))),
      "Difference" = c(M20 - F20))
      )
wald( fit, L)

## Right and left second derivatives at knots and saltus
L <- list( "Second derivatives and saltus for female curve at knot at 25" =
          cbind( 0, sc( sp, c(25,25,25), D = 2, type =c(0,1,2)), 0,0,0,0))
L
wald( fit, L )

## Smoothing splines
      library(nlme)
      data(Spruce)
      Spruce$all <- 1
      range( Spruce$days)
      sp <- function(x) smsp ( x, seq( 150, 675, 5))
      spruce.fit1 <- lme(logSize ~ days, data=Spruce,
          random=list(all= pdIdent(~sp(days) -1),
          plot=~1, Tree=~1))
      summary(spruce.fit1)
      pred <- expand.grid( days = seq( 160, 670, 10), all = 1)
      pred$logSize <- predict( spruce.fit1, newdata = pred, level = 1)
      require( lattice )
      xyplot( logSize ~ days, pred, type = 'l')
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
